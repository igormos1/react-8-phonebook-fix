{"version":3,"file":"static/js/903.5eb07fa4.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","components/SignUp/SignUp.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\n\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\n\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg'\n    } = props,\n          other = _objectWithoutPropertiesLoose(props, _excluded);\n\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    }); // @ts-ignore module augmentation fails if custom breakpoints are used\n\n\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes\n  /* remove-proptypes */\n  = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes\n    /* @typescript-to-proptypes-ignore */\n    .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { NavLink } from 'react-router-dom';\n\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"redux/auth/authOperations.js\"\n\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n\nconst dispatch = useDispatch();\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const send = {\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n    dispatch(authOperations.register(send));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 5 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <NavLink to=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </NavLink>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import SignUp from \"components/SignUp/SignUp.jsx\";\n\n\nexport default function RegisterPage() {\n\n    return (\n        <div>\n            <SignUp />\n        </div>\n    );\n}\n\n\n\n\n\n\n// import { useState, useId } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import authOperations from \"redux/auth/authOperations.js\";\n\n// export default function RegisterPage() {\n\n//     const id = useId();\n//     const dispath = useDispatch()\n//     const [name, setName] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleChange = ({ target: { name, value } }) => {\n//         switch (name) {\n//             case 'name':\n//                 return setName(value);\n//             case 'email':\n//                 return setEmail(value);\n//             case 'password':\n//                 return setPassword(value);\n//             default:\n//                 return;\n//         }\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         dispath(authOperations.register({ name, email, password }));\n//         setName('');\n//         setEmail('');\n//         setPassword('');\n//     };\n\n//     return (\n//         <div>\n//             <h1>Sign up</h1>\n//             <form\n//                 onSubmit={handleSubmit}\n//                 autoComplete=\"off\">\n//                 <label htmlFor={`${id}-name`}>Name</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     id={`${id}-name`}\n//                     value={name}\n//                     onChange={handleChange}\n//                 />\n//                 <label htmlFor={`${id}-email`}>Email</label>\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     id={`${id}-email`}\n//                     value={email}\n//                     onChange={handleChange}\n//                 />\n//                 <label htmlFor={`${id}-password`}>Password</label>\n//                 <input\n//                     type=\"text\"\n//                     name=\"password\"\n//                     id={`${id}-password`}\n//                     value={password}\n//                     onChange={handleChange}\n//                 />\n//                 <button type=\"submit\">Sign up</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n\n\n\n\n\n\n// import { Formik, Form, input } from \"formik\";\n// import { useId } from \"react\";\n\n\n\n\n// export default function RegisterPage() {\n\n//     const initialValues = {\n//         name: '',\n//         email: '',\n//         password: '',\n//     };\n\n//     const id = useId();\n\n    \n//     return (\n//         <Formik\n//         initialValues={initialValues}\n//         >\n//             <Form autoComplete=\"off\">\n                // <label htmlFor={`${id}-name`}>Name</label>\n                // <input\n                //     type=\"text\"\n                //     name=\"name\"\n                //     id={`${id}-name`}\n                // />\n                // <label htmlFor={`${id}-email`}>Email</label>\n                // <input\n                //     type=\"email\"\n                //     name=\"email\"\n                //     id={`${id}-email`}\n                // />\n                // <label htmlFor={`${id}-password`}>Password</label>\n                // <input\n                //     type=\"text\"\n                //     name=\"password\"\n                //     id={`${id}-password`}\n                // />\n                // <button type=\"submit\">Sign up</button>\n//             </Form>\n//         </Formik>\n//     )\n// }\n\n//***************** */\n\n// import { Formik, Form, input } from \"formik\";\n// import { useId } from \"react\";\n\n\n\n\n// export default function RegisterPage() {\n\n//     const initialValues = {\n//         name: '',\n//         email: '',\n//         password: '',\n//     };\n\n//     const id = useId();\n\n    \n//     return (\n//         <Formik\n//         initialValues={initialValues}\n//         >\n//             <Form autoComplete=\"off\">\n                // <label htmlFor={`${id}-name`}>Name</label>\n                // <input\n                //     type=\"text\"\n                //     name=\"name\"\n                //     id={`${id}-name`}\n                // />\n                // <label htmlFor={`${id}-email`}>Email</label>\n                // <input\n                //     type=\"email\"\n                //     name=\"email\"\n                //     id={`${id}-email`}\n                // />\n                // <label htmlFor={`${id}-password`}>Password</label>\n                // <input\n                //     type=\"text\"\n                //     name=\"password\"\n                //     id={`${id}-password`}\n                // />\n                // <button type=\"submit\">Sign up</button>\n//             </Form>\n//         </Formik>\n//     )\n// }"],"names":["createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","Container","options","createStyledComponent","useThemeProps","ContainerRoot","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","React","ref","className","component","other","_objectWithoutPropertiesLoose","_jsx","as","clsx","createContainer","styled","SignUp","dispatch","useDispatch","ThemeProvider","CssBaseline","Box","sx","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","send","get","email","password","authOperations","mt","Grid","container","item","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","mb","justifyContent","to","RegisterPage"],"sourceRoot":""}